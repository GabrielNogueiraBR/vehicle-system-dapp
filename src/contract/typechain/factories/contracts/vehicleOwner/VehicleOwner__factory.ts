/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  VehicleOwner,
  VehicleOwnerInterface,
} from "../../../contracts/vehicleOwner/VehicleOwner";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
    ],
    name: "addVehicleServiceRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
    ],
    name: "contractVehicleInsuranceProposal",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "createVehicle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "insurer",
        type: "address",
      },
    ],
    name: "createVehicleInsuranceRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "agent",
        type: "address",
      },
      {
        internalType: "string",
        name: "vehicleRegistrationCode",
        type: "string",
      },
    ],
    name: "createVehicleRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "driverLicenseCode",
        type: "string",
      },
    ],
    name: "defineDriverLicenseCode",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "driverLicenseCodeOf",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDriverLicenseCode",
    outputs: [
      {
        internalType: "string",
        name: "driverLicenseCode",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTokenIdsByOwner",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "getUserVehicleRequestById",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "requester",
            type: "address",
          },
          {
            internalType: "address",
            name: "agent",
            type: "address",
          },
          {
            internalType: "string",
            name: "vehicleRegistrationCode",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "carBrand",
                type: "string",
              },
              {
                internalType: "string",
                name: "carModel",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "manufacturingDate",
                type: "uint256",
              },
              {
                internalType: "uint256[]",
                name: "vehicleOwnershipRecordIds",
                type: "uint256[]",
              },
            ],
            internalType: "struct IBaseContract.VehicleRequestData",
            name: "vehicleData",
            type: "tuple",
          },
          {
            internalType: "enum IBaseContract.Status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseContract.VehicleRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listApprovalsIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listUserVehicleRequestsIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "driverLicenseCode",
        type: "string",
      },
    ],
    name: "userRegistration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052346200002657620000146200002b565b6040516131b86200051a82396131b890f35b600080fd5b6200003562000037565b565b620000356200003562000035620000356200003562000035620000356200003562000035620000356200003562000035620000356200003562000150565b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b03821117620000ad57604052565b62000075565b9062000035620000c260405190565b92836200008b565b6001600160401b038111620000ad57602090601f01601f19160190565b90620000fd620000f783620000ca565b620000b3565b918252565b6200010e6003620000e7565b6213919560ea1b602082015290565b6200012762000102565b90565b620001366004620000e7565b631593919560e21b602082015290565b620001276200012a565b6200016f6200015e6200011d565b6200016862000146565b906200017b565b62000035601f620004e9565b620000359182918291829182918291620001969190620003bc565b62000035336200044c565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015620001da575b6020831014620001d457565b620001a1565b91607f1691620001c8565b9160001960089290920291821b911b5b9181191691161790565b6200012762000127620001279290565b919062000224620001276200022d93620001ff565b908354620001e5565b9055565b62000035916000916200020f565b8181106200024b575050565b806200025b600060019362000231565b016200023f565b9190601f81116200027257505050565b620002866200003593600052602060002090565b906020601f840181900483019310620002aa575b6020601f9091010401906200023f565b90915081906200029a565b9060001960089091021c191690565b81620002d091620002b5565b906002021790565b90620002e2815190565b906001600160401b038211620000ad576200030a82620003038554620001b7565b8562000262565b602090601f83116001146200033d576200022d92916000918362000331575b5050620002c4565b01519050388062000329565b601f198316916200035385600052602060002090565b9260005b81811062000397575091600293918560019694106200037a575b50505002019055565b6200038c910151601f841690620002b5565b905538808062000371565b9193602060018192878701518155019501920162000357565b906200003591620002d8565b90620003ce62000035926018620003b0565b6019620003b0565b62000127905b6001600160a01b031690565b620001279054620003d6565b906001600160a01b0390620001f5565b6200012790620003dc906001600160a01b031682565b620001279062000404565b62000127906200041a565b9062000444620001276200022d9262000425565b8254620003f4565b62000458601e620003e8565b906200046681601e62000430565b6200049d620004967f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09362000425565b9162000425565b91620004a860405190565b600090a3565b620001279081565b620001279054620004ae565b9060001990620001f5565b90620004e1620001276200022d92620001ff565b8254620004c2565b6200003590620005126000620005006001620001ff565b9201916200050e83620004b6565b0190565b90620004cd56fe6080604052600436101561001257600080fd5b60003560e01c806301664486146101e257806301ffc9a7146101dd57806306fdde03146101d8578063081812fc146101d3578063095ea7b3146101ce5780631114cd57146101c95780631499f40b146101c457806314a5189a146101bf57806315acca77146101ba57806323b872dd146101b5578063333f0040146101b057806342842e0e146101ab5780634c7525da146101a65780636352211e146101a157806370a082311461019c57806370e37a6414610197578063715018a61461019257806378301afd1461018d5780638da5cb5b1461018857806395d89b4114610183578063993266221461017e578063a22cb46514610179578063b88d4fde14610174578063bc6f4be61461016f578063c87b56dd1461016a578063cf6713d014610165578063d7d3850814610160578063e985e9c51461015b5763f2fde38b036101f057610abd565b610aa1565b610a74565b610a5c565b610a41565b610a29565b610a0d565b6109a5565b610952565b610937565b61091c565b610904565b6108c7565b6108ac565b610881565b610866565b61084d565b6107ff565b6107e3565b610698565b61064d565b61061e565b6105f7565b61046c565b6103ec565b6103a2565b61034e565b6102a9565b61024c565b805b036101f057565b600080fd5b90503590610202826101e7565b565b6001600160a01b031690565b90565b6101e981610204565b9050359061020282610213565b91906040838203126101f0576102109061024381856101f5565b9360200161021c565b346101f05761026561025f366004610229565b90612acc565b604051005b0390f35b6001600160e01b03191690565b6101e98161026e565b905035906102028261027b565b906020828203126101f05761021091610284565b9052565b346101f05761026a6102c46102bf366004610291565b610cef565b6040515b91829182901515815260200190565b60009103126101f057565b60005b8381106102f55750506000910152565b81810151838201526020016102e5565b61032661032f6020936103399361031a815190565b80835293849260200190565b958691016102e2565b601f01601f191690565b0190565b602080825261021092910190610305565b346101f05761035e3660046102d7565b61026a610369610f76565b6040519182918261033d565b906020828203126101f057610210916101f5565b6102a590610204565b6020810192916102029190610389565b346101f05761026a6103bd6103b8366004610375565b61119b565b60405191829182610392565b91906040838203126101f057610210906103e3818561021c565b936020016101f5565b346101f0576102656103ff3660046103c9565b9061112b565b9061042561041e610414845190565b8084529260200190565b9260200190565b9060005b8181106104365750505090565b90919261045361044c6001928651815260200190565b9460200190565b929101610429565b602080825261021092910190610405565b346101f05761047c3660046102d7565b61026a61048761255c565b6040519182918261045b565b906104a261041e610414845190565b9060005b8181106104b35750505090565b9091926104c961044c6001928651815260200190565b9291016104a6565b805160808084526102109391606091610502916104f091850190610305565b60208501518482036020860152610305565b9261051260408201516040850152565b0151906060818403910152610493565b634e487b7160e01b600052602160045260246000fd5b6004111561054257565b610522565b9061020282610538565b61021090610547565b6102a590610551565b906102109060c0806105bd6105ab60e0850161058760008901516000880190610389565b61059960208901516020880190610389565b60408801518682036040880152610305565b606087015185820360608701526104d1565b946105d06080820151608086019061055a565b6105df60a082015160a0860152565b0151910152565b602080825261021092910190610563565b346101f05761026a61061261060d366004610375565b612504565b604051918291826105e6565b346101f05761062e3660046102d7565b61026a610487612360565b906020828203126101f0576102109161021c565b346101f05761026a610369610663366004610639565b611eb2565b90916060828403126101f057610210610681848461021c565b9361068f816020860161021c565b936040016101f5565b346101f0576102656106ab366004610668565b91611254565b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176106e857604052565b6106b1565b906102026106fa60405190565b92836106c7565b6001600160401b0381116106e857602090601f01601f19160190565b90826000939282370152565b9092919261073e61073982610701565b6106ed565b938185526020850190828401116101f0576102029261071d565b9080601f830112156101f05781602061021093359101610729565b919060a0838203126101f05761078981846101f5565b9260208101356001600160401b0381116101f057826107a9918301610758565b9260408201356001600160401b0381116101f0576107cc84610210928501610758565b936107da81606086016101f5565b936080016101f5565b346101f0576102656107f6366004610773565b93929092612912565b346101f057610265610812366004610668565b91611271565b9190916040818403126101f05761082f838261021c565b9260208201356001600160401b0381116101f0576102109201610758565b346101f057610265610860366004610818565b90612257565b346101f05761026a6103bd61087c366004610375565b610e51565b346101f05761026a61089c610897366004610639565b610dce565b6040519182918290815260200190565b346101f0576108bc3660046102d7565b61026a6104876128de565b346101f0576108d73660046102d7565b610265610b21565b906020828203126101f05781356001600160401b0381116101f0576102109201610758565b346101f0576102656109173660046108df565b611d4b565b346101f05761092c3660046102d7565b61026a6103bd610adf565b346101f0576109473660046102d7565b61026a610369610f80565b346101f0576109623660046102d7565b61026a610369611e8b565b8015156101e9565b905035906102028261096d565b91906040838203126101f0576102109061099c818561021c565b93602001610975565b346101f0576102656109b8366004610982565b906111c0565b906080828203126101f0576109d3818361021c565b926109e1826020850161021c565b926040926109f1818584016101f5565b936001806060850135921b0381116101f0576102109201610758565b346101f057610265610a203660046109be565b92919091611281565b346101f057610265610a3c3660046108df565b611e51565b346101f05761026a610369610a57366004610375565b610ff0565b346101f057610265610a6f366004610375565b6125c5565b610265610a82366004610375565b612ea4565b91906040838203126101f05761021090610243818561021c565b346101f05761026a6102c4610ab7366004610a87565b906111cb565b346101f057610265610ad0366004610639565b610c35565b6102109054610204565b610210601e610ad5565b610af1610b7d565b610202610b0f565b6102046102106102109290565b61021090610af9565b610202610b1c6000610b06565b610c94565b610202610ae9565b15610b3057565b60405162461bcd60e51b815280610b79600482016020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b0390fd5b610202610b88610adf565b610b9f610b9933610204565b610204565b91610204565b14610b29565b61020290610bb1610b7d565b610c11565b15610bbd57565b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b61020290610b1c610c25610b946000610b06565b610c2e83610204565b1415610bb6565b61020290610ba5565b906001600160a01b03905b9181191691161790565b61021090610204906001600160a01b031682565b61021090610c53565b61021090610c67565b90610c89610210610c9092610c70565b8254610c3e565b9055565b610c9e601e610ad5565b90610caa81601e610c79565b610cdd610cd77f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e093610c70565b91610c70565b91610ce760405190565b80805b0390a3565b610cff6380ac58cd60e01b61026e565b610d088261026e565b14908115610d25575b8115610d1b575090565b6102109150611980565b9050610d37635b5e139f60e01b61026e565b610d408261026e565b1490610d11565b15610d4e57565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608490fd5b90610daf90610c70565b600052602052604060002090565b6102109081565b6102109054610dbd565b610e0561021091610ddd600090565b50610dfe610dee610b946000610b06565b610df783610204565b1415610d47565b601b610da5565b610dc4565b15610e1157565b60405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606490fd5b610e5e9060005b50611321565b610210610e6e610b946000610b06565b610e7783610204565b1415610e0a565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610eb4575b6020831014610eaf57565b610e7e565b91607f1691610ea4565b80546000939291610edb610ed183610e94565b8085529360200190565b9160018116908115610f2d5750600114610ef457505050565b610f079192939450600052602060002090565b916000925b818410610f195750500190565b805484840152602090930192600101610f0c565b92949550505060ff1916825215156020020190565b9061021091610ebe565b90610202610f6692610f5d60405190565b93848092610f42565b03836106c7565b61021090610f4c565b6102106018610f6d565b6102106019610f6d565b6102106102106102109290565b90610fa461073983610701565b918252565b6102106000610f97565b610210610fa9565b610339610fd392602092610fcd815190565b94859290565b938491016102e2565b610fea906102109392610fbb565b90610fbb565b610ff9816116e0565b61100161105b565b80516110146110106000610f8a565b9190565b1115611051576102106110459161102d610210946118eb565b9061103760405190565b938492602084019283610fdc565b908103825203826106c7565b5050610210610fb3565b610210610fb3565b1561106a57565b60405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608490fd5b156110c057565b60405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608490fd5b906102029161117b61113c83610e51565b61115861114882610204565b61115185610204565b1415611063565b3361116282610204565b61116b82610204565b14918215611180575b50506110b9565b6115ba565b61118a92506111cb565b3880611174565b90610daf90610f8a565b6111bb610210916111aa600090565b506111b4816116e0565b601c611191565b610ad5565b61020291903361166c565b610210916111e66111eb926111de600090565b50601d610da5565b610da5565b5460ff1690565b156111f957565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b61020292919061126c6112678433611338565b6111f2565b6114aa565b90916102029261127f610fb3565b925b610202939291906112956112678433611338565b611302565b156112a157565b6040515b62461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608490fd5b91610202939161131c936113178383836114aa565b61178f565b61129a565b6111bb61021091611330600090565b50601a611191565b61134182610e51565b9161134b83610204565b61135483610204565b14928315611385575b50821561136957505090565b61138191925061137b610b999161119b565b92610204565b1490565b61139291935082906111cb565b913861135d565b156113a057565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b156113fa57565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b916001600160a01b0360089290920291821b911b610c49565b9190611475610210610c9093610c70565b90835461144b565b61020291600091611464565b9060001990610c49565b906114a3610210610c9092610f8a565b8254611489565b91906114ca6114b883610e51565b6114c4610b9986610204565b14611399565b61151660006114ee6114de610b9483610b06565b6114e785610204565b14156113f3565b6115066114fa85610e51565b6114c4610b9988610204565b61151184601c611191565b61147d565b61155a6115236001610f8a565b61154a61155084601b6111e66115398a83610da5565b61154a8761154683610dc4565b0390565b90611493565b9161033983610dc4565b61156e8161156984601a611191565b610c79565b6115aa6115a461159e7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95610c70565b92610c70565b92610f8a565b926115b460405190565b600090a4565b906115ca8261156983601c611191565b6115d381610e51565b916115aa6115a461159e7f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92595610c70565b1561160b57565b60405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606490fd5b9060ff90610c49565b90611665610210610c9092151590565b825461164c565b61168861167883610204565b61168183610204565b1415611604565b6116a08361169b846111e685601d610da5565b611655565b610cea6116d66116d07f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3193610c70565b93610c70565b936102c860405190565b6116ec610202916116f1565b610e0a565b6116fc906000610e58565b61170c610b99610b946000610b06565b141590565b905051906102028261027b565b906020828203126101f05761021091611711565b90926117639061175c610210969461175260808601976000870190610389565b6020850190610389565b6040830152565b6060818403910152610305565b3d1561178a5761177f3d610f97565b903d6000602084013e565b606090565b9190939261179b600090565b946117a58161188c565b1561188257906117ec60006117c46117bf60209695610c70565b610c70565b926117f763150b7a02916117d53390565b966117df60405190565b998a988997889660e01b90565b865260048601611732565b03925af160009181611852575b506118365750611812611770565b80516118216110106000610f8a565b0361182e576040516112a5565b805190602001fd5b90915061138161184c630a85bd0160e11b61026e565b9161026e565b61187491925060203d811161187b575b61186c81836106c7565b81019061171e565b9038611804565b503d611862565b5060019450505050565b3b61189a6110106000610f8a565b1190565b369037565b906102026118b96118b384610f97565b93610701565b601f19016020840161189e565b634e487b7160e01b600052601260045260246000fd5b81156118e6570490565b6118c6565b6118f481611993565b9061190460019261033984610f8a565b918061190f846118a3565b8094611919600090565b5060200101905b61192b575b50505090565b61195f9060001901926f181899199a1a9b1b9c1cb0b131b232b360811b600a82061a8453611959600a610f8a565b906118dc565b908161196e6110106000610f8a565b1461197b57909181611920565b611925565b61138161184c6301ffc9a760e01b61026e565b61199d6000610f8a565b9072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b6119be81610f8a565b821015611b0f575b506904ee2d6d415b85acef8160201b6119de81610f8a565b821015611aed575b50662386f26fc100006119f881610f8a565b821015611acb575b506305f5e100611a0f81610f8a565b821015611aa9575b50612710611a2481610f8a565b821015611a87575b506064611a3881610f8a565b821015611a65575b50611a4e611010600a610f8a565b1015611a575790565b610210906103396001610f8a565b611a8091611959611a7592610f8a565b916103396002610f8a565b9038611a40565b611aa291611959611a9792610f8a565b916103396004610f8a565b9038611a2c565b611ac491611959611ab992610f8a565b916103396008610f8a565b9038611a17565b611ae691611959611adb92610f8a565b916103396010610f8a565b9038611a00565b611b0891611959611afd92610f8a565b916103396020610f8a565b90386119e6565b611b2a91611959611b1f92610f8a565b916103396040610f8a565b90386119c6565b156101f057565b634e487b7160e01b600052603260045260246000fd5b8054821015611b7157611b68600191600052602060002090565b91020190600090565b611b38565b80549190600160401b8310156106e85782611b9991600161020295018155611b4e565b90611464565b634e487b7160e01b600052600060045260246000fd5b9160001960089290920291821b911b610c49565b9190611bda610210610c9093610f8a565b908354611bb5565b61020291600091611bc9565b818110611bf9575050565b80611c076000600193611be2565b01611bee565b9190601f8111611c1c57505050565b611c2e61020293600052602060002090565b906020601f840181900483019310611c50575b6020601f909101040190611bee565b9091508190611c41565b9060001960089091021c191690565b81611c7391611c5a565b906002021790565b90611c84815190565b906001600160401b0382116106e857611ca782611ca18554610e94565b85611c0d565b602090601f8311600114611cd557610c90929160009183611cca575b5050611c69565b015190503880611cc3565b601f19831691611cea85600052602060002090565b9260005b818110611d2957509160029391856001969410611d0f575b50505002019055565b611d1f910151601f841690611c5a565b9055388080611d06565b91936020600181928787015181550195019201611cee565b9061020291611c7b565b61020290611da633611d6a611d5f82611dc3565b151560011415611b31565b611d9f611d8f6004611d8a84611d85611d81845490565b9390565b611b76565b610f8a565b611d9a836007610da5565b611493565b600a610da5565b611d41565b610210916008021c610204565b906102109154611dab565b6007611dd2610e058383610da5565b600090611de161101083610f8a565b128015611e1f575b611e195750610b9961137b611e1361138193611e0d611d8a610e0588600494610da5565b90611b4e565b90611db8565b91505090565b50600454611e2f61101083610f8a565b1115611de9565b61020290611e42611e5a565b61020290611da633600a610da5565b61020290611e36565b610202611e6633611dc3565b611b31565b61021090611e77611e5a565b50610210611e8633600a610da5565b610f6d565b6102106060611e6b565b9061021091611ea2610b7d565b61021091611e869150600a610da5565b610210906060611e95565b9061020291611eca611e5a565b61216c565b61021060806106ed565b61021060e06106ed565b906102a590610204565b906102a590610547565b8054821015611b7157611b68600a91600052602060002090565b6102109051610204565b634e487b7160e01b600052601160045260246000fd5b818110611f3c575050565b80611f4a6000600193611be2565b01611f31565b9091828110611f5e57505050565b6102029290611f74905b92600052602060002090565b9081019101611f31565b90600160401b81116106e85781611f96610202935490565b90828155611f50565b8151916001600160401b0383116106e857611fc9611f68600192611fc38686611f7e565b60200190565b92049160005b838110611fdc5750505050565b6001906020611fec610210865190565b9401938184015501611fcf565b9061020291611f9f565b90612052606060036102029461202760008201612021600088015190565b90611d41565b61203960018201612021602088015190565b61204b6002820161154a604088015190565b0192015190565b90611ff9565b9061020291612003565b6102109051610547565b90611665610210610c9092610551565b610202919061154a9060c09060099061209e8161209887611f11565b90610c79565b6120b16001820161209860208801611f11565b6120c360028201612021604088015190565b6120db600382016120d5606088015190565b90612058565b6120f4600782016120ee60808801612062565b9061206c565b61204b6008820161154a60a088015190565b9190612115576102029161207c565b611b9f565b80549190600160401b8310156106e8578261213d91600161020295018155611ef7565b90612106565b80549190600160401b8310156106e8578261216691600161020295018155611b4e565b90611bc9565b61224b6102106122176122506102029561224b61021061223f97612192611e6682612261565b6122446000946122366121a3606090565b916121ed6121af611ecf565b936121c16121bb610fb3565b8b870152565b6121d36121cc610fb3565b6020870152565b6121e66121df8b610f8a565b6040870152565b6060850152565b33998a936121e6429361220a612201611ed9565b978d8901611ee3565b6121df8960208901611ee3565b6122248860808501611eed565b61222f8160a0850152565b60c0830152565b85545b9a8b9690565b61211a565b600b610da5565b612143565b600c610da5565b9061020291611ebd565b6008612270610e058383610da5565b60009061227f61101083610f8a565b1280156122ab575b611e195750610b9961137b611e1361138193611e0d611d8a610e0588600594610da5565b506005546122bb61101083610f8a565b1115612287565b610210906122ce611e5a565b61234c565b906122e2611f68610414845490565b9060005b8181106122f35750505090565b90919261231761231060019261230887610dc4565b815260200190565b9460010190565b9291016122e6565b90610210916122d3565b90610202610f669261233a60405190565b9384809261231f565b61021090612329565b5061021061235b33600c610da5565b612343565b61021060606122c2565b612372611ecf565b606080825260208201819052600060408301528082015290565b61021061236a565b61239c611ed9565b906000825260208080808080808801600081520160608152016123bd61238c565b815201600081520160008152016000905250565b610210612394565b90610210916123e782612515565b6124ee565b9061020261244060036123fd611ecf565b9461240e61240a82610f4c565b8752565b61242461241d60018301610f4c565b6020880152565b61243a61243360028301610dc4565b6040880152565b01612329565b6060840152565b906102026124de6009612458611ed9565b9461246b61246582610ad5565b87611ee3565b61248361247a60018301610ad5565b60208801611ee3565b61249261243360028301610f4c565b6124a86124a1600383016123ec565b6060880152565b6124c26124b9600783015460ff1690565b60808801611eed565b6124d86124d160088301610dc4565b60a0880152565b01610dc4565b60c0840152565b61021090612447565b610210916124fe91506000611ef7565b506124e5565b610210906125106123d1565b6123d9565b61252f6102029161252860009182611ef7565b5001610ad5565b61253b610b9933610204565b14611b31565b6102109061254d611e5a565b5061021061235b33600d610da5565b6102106060612541565b6102029061257381612515565b6102029060076125be6000926125ac612599846125908488611ef7565b50015460ff1690565b61253b6125a66001610547565b91610547565b6125b681336125ce565b600293611ef7565b500161206c565b61020290612566565b6102029190612612601f926125eb6125e58561273f565b94612754565b61260c8461224b6102103361260581611569866026611191565b6027610da5565b8361282c565b6102029161261e610fb3565b61131c916102029361263082826126d5565b6113176000610b06565b1561264157565b60405162461bcd60e51b815280610b79600482016020808252818101527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604082015260600190565b1561269157565b60405162461bcd60e51b815260206004820152601c60248201527b115490cdcc8c4e881d1bdad95b88185b1c9958591e481b5a5b9d195960221b6044820152606490fd5b906126e06000610b06565b916126fd6126ed84610204565b6126f683610204565b141561263a565b61271561271061270c846116f1565b1590565b61268a565b61272461271061270c846116f1565b61155a6127316001610f8a565b61154a61155084601b610da5565b60006102109161274d600090565b5001610dc4565b6102029061154a60006127676001610f8a565b92019161033983610dc4565b610210906123ec565b61021060a06106ed565b8054821015611b7157611b68600591600052602060002090565b9061205260806004610202946127be60008201612021600088015190565b6127d060018201612021602088015190565b6127e260028201612021604088015190565b61204b6003820161154a606088015190565b919061211557610202916127a0565b80549190600160401b8310156106e8578261282691600161020295018155612786565b906127f4565b906128d7610202926128b860006128b1600261285e61285760036128508a87611ef7565b5001612773565b9784611ef7565b5001956128aa838201516128a360208401519161289c6060612881604088015190565b9601519761289661289061277c565b9d610f6d565b908d0152565b60208b0152565b6040890152565b6060870152565b6080850152565b611d9a6020916128d06128ca8461273f565b93612754565b6028611191565b6023612803565b61021061021061235b336027610da5565b906102029493929161290081612a70565b9061290f9493929133906129e7565b50565b90610202949392916128ef565b8054821015611b7157611b68600791600052602060002090565b610202919061154a9060c0906006906129558161209887611f11565b6129676001820161154a602088015190565b61297960028201612021604088015190565b61298b60038201612021606088015190565b61299d6004820161154a608088015190565b61204b6005820161154a60a088015190565b91906121155761020291612939565b80549190600160401b8310156106e857826129e19160016102029501815561291f565b906129af565b93909491926129f4600090565b504293612a02858510611b31565b612a0a611ed9565b96612a159088611ee3565b612a20866020890152565b60408701526060860152608085015260a084015260c0830152602190612a458261273f565b92612a508493612754565b612a5b9060246129be565b612a66906029611191565b9061021091612143565b61252f61020291610e51565b9061020291612a8a81612a70565b612aa1565b91908201809211612a9c57565b611f1b565b9061020291612ac6612abf42612ab9624f1a00610f8a565b90612a8f565b8383612ad6565b50612cb5565b9061020291612a7c565b9190612af160016124d885612aec856016610da5565b611191565b612afe6110106000610f8a565b11612b0c5761021092612b4a565b61021092612ba3565b610202919061154a90606090600390612b2e8185875190565b6120396001820161154a602088015190565b9061020291612b15565b91904292838310612b9a57612aec612b9092612b89612b9596612b7e612b6e611ecf565b97612b77878a52565b6020890152565b6128aa816040890152565b6016610da5565b612b40565b600190565b50505050600090565b61021090612aec612bbe93612bb6600090565b506016610da5565b60018101612bce61021082610dc4565b8310612beb57612b9592612be191611493565b6002429101611493565b505050600090565b61021060c06106ed565b8054821015611b7157611b68600691600052602060002090565b610202919061154a9060a090600590612c338161209887611f11565b612c466001820161209860208801611f11565b612c586002820161154a604088015190565b612c6b600382016120ee60608801612062565b61204b6004820161154a608088015190565b91906121155761020291612c17565b80549190600160401b8310156106e85782612caf91600161020295018155612bfd565b90612c7d565b61224b61021061020293612d46612d3a94612cd2611e6684612d4d565b61224b610210600092612d2c3394612d1a4291612cf9612cf0612bf3565b98828a01611ee3565b612d068a60208a01611ee3565b612d118560408a0152565b60608801611eed565b612d25816080880152565b60a0860152565b612d3f600194612239865490565b612c8c565b6011611191565b600e610da5565b6009612d5c610e058383610da5565b600090612d6b61101083610f8a565b128015612d97575b611e195750610b9961137b611e1361138193611e0d611d8a610e0588600694610da5565b50600654612da761101083610f8a565b1115612d73565b61020290612dbb8161316c565b612e0c565b15612dc757565b60405162461bcd60e51b815260206004820152601f60248201527f4661696c656420746f2073656e6420457468657220746f20696e7375726572006044820152606490fd5b61290f90600290612e6660008034612e35612e2f610210600561274d898b611ef7565b8261253b565b612e476117bf6001612528888a611ef7565b90612e5160405190565b90818003925af1612e60611770565b50612dc0565b612e6f81612fe0565b612e9e61159e600461274d612e888661274d8782611ef7565b94612e986001612528838a611ef7565b96611ef7565b90612ad6565b61020290612dae565b6001600160401b0381116106e85760208091020190565b90610fa461073983612ead565b906102026118b9612ee184612ec4565b93612ead565b6102106101206106ed565b8054821015611b7157611b68600991600052602060002090565b610202919061154a9061010090600890612f298161209887611f11565b612f3c6001820161209860208801611f11565b612f4e6002820161154a604088015190565b612f6060038201612021606088015190565b612f726004820161154a608088015190565b612f846005820161154a60a088015190565b612f966006820161205260c088015190565b61204b6007820161154a60e088015190565b91906121155761020291612f0c565b80549190600160401b8310156106e85782612fda91600161020295018155612ef2565b90612fa8565b600290612fed9082611ef7565b5060078101805460ff169260009361300485610547565b9061300e90610547565b1461301890611b31565b61302184610f8a565b61302a90612ed1565b613035848601610ad5565b946001850161304381610ad5565b928487019361305185610dc4565b6006890161306160038b01610dc4565b9161306e60048c01610dc4565b93429c613079612ee7565b9889019061308691611ee3565b61308f90610c70565b61309c9060208901611ee3565b60408701526130aa90610f6d565b6060860152608085015260a084015260c08301526130c98760e0840152565b6130d587610100840152565b600380549384938492906130e891612fb7565b60136130f382610dc4565b6130fc91611191565b90601061310885610ad5565b61311191610da5565b9360179061311e90610ad5565b61312791610da5565b9061313190610dc4565b61313a91611191565b9461314491612143565b61314d91612143565b61315691612143565b61315f9161206c565b6009019061020291611493565b61252f61087c6102029261274d60029182611ef756fea2646970667358221220b3b7b50aa5583db032c70d764dbdbef816a956fd59ec3cfc62f4971caded594a64736f6c63430008130033";

type VehicleOwnerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VehicleOwnerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VehicleOwner__factory extends ContractFactory {
  constructor(...args: VehicleOwnerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<VehicleOwner> {
    return super.deploy(overrides || {}) as Promise<VehicleOwner>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): VehicleOwner {
    return super.attach(address) as VehicleOwner;
  }
  override connect(signer: Signer): VehicleOwner__factory {
    return super.connect(signer) as VehicleOwner__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VehicleOwnerInterface {
    return new utils.Interface(_abi) as VehicleOwnerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VehicleOwner {
    return new Contract(address, _abi, signerOrProvider) as VehicleOwner;
  }
}
