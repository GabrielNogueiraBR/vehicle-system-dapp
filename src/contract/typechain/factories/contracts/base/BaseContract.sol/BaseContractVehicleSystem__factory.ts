/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  BaseContractVehicleSystem,
  BaseContractVehicleSystemInterface,
} from "../../../../contracts/base/BaseContract.sol/BaseContractVehicleSystem";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b610071565b601880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61023f806100806000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063715018a6146100465780638da5cb5b14610050578063f2fde38b14610074575b600080fd5b61004e610087565b005b61005861009b565b6040516001600160a01b03909116815260200160405180910390f35b61004e6100823660046101d9565b6100aa565b61008f610128565b6100996000610187565b565b6018546001600160a01b031690565b6100b2610128565b6001600160a01b03811661011c5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61012581610187565b50565b3361013161009b565b6001600160a01b0316146100995760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610113565b601880546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156101eb57600080fd5b81356001600160a01b038116811461020257600080fd5b939250505056fea2646970667358221220f99201b05837d98b309d65fddbb1c9abbb47b5ae6cd8cb3a6b2cfb28843c51cf64736f6c63430008130033";

type BaseContractVehicleSystemConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BaseContractVehicleSystemConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BaseContractVehicleSystem__factory extends ContractFactory {
  constructor(...args: BaseContractVehicleSystemConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BaseContractVehicleSystem> {
    return super.deploy(overrides || {}) as Promise<BaseContractVehicleSystem>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BaseContractVehicleSystem {
    return super.attach(address) as BaseContractVehicleSystem;
  }
  override connect(signer: Signer): BaseContractVehicleSystem__factory {
    return super.connect(signer) as BaseContractVehicleSystem__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BaseContractVehicleSystemInterface {
    return new utils.Interface(_abi) as BaseContractVehicleSystemInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BaseContractVehicleSystem {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as BaseContractVehicleSystem;
  }
}
