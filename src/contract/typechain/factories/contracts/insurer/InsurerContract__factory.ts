/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  InsurerContract,
  InsurerContractInterface,
} from "../../../contracts/insurer/InsurerContract";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "agentAddress",
        type: "address",
      },
    ],
    name: "agentDeactivation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "agentAddress",
        type: "address",
      },
    ],
    name: "agentRegistration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "carBrand",
        type: "string",
      },
      {
        internalType: "string",
        name: "carModel",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "manufacturingDate",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "string",
            name: "driverLicenseCode",
            type: "string",
          },
          {
            internalType: "string",
            name: "federalUnit",
            type: "string",
          },
          {
            internalType: "string",
            name: "county",
            type: "string",
          },
          {
            internalType: "string",
            name: "vehiclePlate",
            type: "string",
          },
          {
            internalType: "string",
            name: "year",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "startDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "endDate",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseContract.VehicleOwnershipRecord[]",
        name: "ownershipRecords",
        type: "tuple[]",
      },
    ],
    name: "approveVehicleRequest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "endDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "contractUrl",
        type: "string",
      },
    ],
    name: "createVehicleInsuranceProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVehicleInsuranceContractIdsByInsurer",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVehicleInsuranceRequestIdsByInsurer",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
    ],
    name: "getVehicleRequestById",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "requester",
            type: "address",
          },
          {
            internalType: "address",
            name: "agent",
            type: "address",
          },
          {
            internalType: "string",
            name: "vehicleRegistrationCode",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "carBrand",
                type: "string",
              },
              {
                internalType: "string",
                name: "carModel",
                type: "string",
              },
              {
                internalType: "uint256",
                name: "manufacturingDate",
                type: "uint256",
              },
              {
                internalType: "uint256[]",
                name: "vehicleOwnershipRecordIds",
                type: "uint256[]",
              },
            ],
            internalType: "struct IBaseContract.VehicleRequestData",
            name: "vehicleData",
            type: "tuple",
          },
          {
            internalType: "enum IBaseContract.Status",
            name: "status",
            type: "uint8",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "updatedAt",
            type: "uint256",
          },
        ],
        internalType: "struct IBaseContract.VehicleRequest",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "insuranceId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "accidentId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
    ],
    name: "insurerAddVehicleServiceRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "insurerAddress",
        type: "address",
      },
    ],
    name: "insurerDeactivation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "insurerAddress",
        type: "address",
      },
    ],
    name: "insurerRegistration",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listAgents",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listInsurers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "listVehicleRequestsIds",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "insuranceId",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "accidentDate",
        type: "uint256",
      },
    ],
    name: "registerVehicleAccidentRecord",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600381526020016213919560ea1b815250604051806040016040528060048152602001631593919560e21b81525081601890816200005c919062000198565b5060196200006b828262000198565b50505062000088620000826200009d60201b60201c565b620000a1565b62000097601f80546001019055565b62000264565b3390565b601e80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011e57607f821691505b6020821081036200013f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200019357600081815260208120601f850160051c810160208610156200016e5750805b601f850160051c820191505b818110156200018f578281556001016200017a565b5050505b505050565b81516001600160401b03811115620001b457620001b4620000f3565b620001cc81620001c5845462000109565b8462000145565b602080601f831160018114620002045760008415620001eb5750858301515b600019600386901b1c1916600185901b1785556200018f565b600085815260208120601f198616915b82811015620002355788860151825594840194600190910190840162000214565b5085821015620002545787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61300080620002746000396000f3fe608060405234801561001057600080fd5b506004361061016a5760003560e01c806301ffc9a71461016f57806306fdde0314610197578063081812fc146101ac578063095ea7b3146101d75780631a971303146101ec57806323b872dd146101ff5780632e5d81fb1461021257806331a3e0c91461022557806342842e0e14610238578063492af1061461024b5780636352211e1461025e57806368684d08146102715780636f04401d1461028657806370a0823114610299578063715018a6146102ba57806371f46bbb146102c25780637db3b2ff146102d55780638b523d0b146102ea5780638da5cb5b146102fd5780638f60d40b1461030557806395d89b4114610318578063a22cb46514610320578063b88d4fde14610333578063baf0438f14610346578063c6c1b3561461034e578063c87b56dd14610356578063d6cd4a0214610369578063e985e9c514610371578063f2fde38b14610384578063f4f297a714610397575b600080fd5b61018261017d366004612459565b6103b7565b60405190151581526020015b60405180910390f35b61019f610409565b60405161018e91906124c6565b6101bf6101ba3660046124d9565b61049b565b6040516001600160a01b03909116815260200161018e565b6101ea6101e536600461250e565b6104c2565b005b6101ea6101fa36600461261d565b6105dc565b6101ea61020d366004612674565b610603565b6101ea6102203660046126b0565b610634565b6101ea610233366004612713565b610653565b6101ea610246366004612674565b610858565b6101ea61025936600461292f565b610873565b6101bf61026c3660046124d9565b6108d4565b610279610908565b60405161018e919061294a565b6101ea61029436600461292f565b610969565b6102ac6102a736600461292f565b6109d7565b60405190815260200161018e565b6101ea610a5d565b6101ea6102d036600461292f565b610a71565b6102dd610aa0565b60405161018e91906129d2565b6101ea6102f836600461292f565b610b08565b6101bf610b19565b6101ea6103133660046129e5565b610b28565b61019f610bd1565b6101ea61032e366004612a78565b610be0565b6101ea610341366004612ab4565b610bef565b6102dd610c27565b6102dd610c8e565b61019f6103643660046124d9565b610cf5565b610279610d69565b61018261037f366004612b2f565b610dc9565b6101ea61039236600461292f565b610df7565b6103aa6103a53660046124d9565b610e6d565b60405161018e9190612b9a565b60006001600160e01b031982166380ac58cd60e01b14806103e857506001600160e01b03198216635b5e139f60e01b145b8061040357506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606018805461041890612c71565b80601f016020809104026020016040519081016040528092919081815260200182805461044490612c71565b80156104915780601f1061046657610100808354040283529160200191610491565b820191906000526020600020905b81548152906001019060200180831161047457829003601f168201915b5050505050905090565b60006104a682611155565b506000908152601c60205260409020546001600160a01b031690565b60006104cd826108d4565b9050806001600160a01b0316836001600160a01b03160361053f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061055b575061055b8133610dc9565b6105cd5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610536565b6105d7838361117a565b505050565b826105e6816111e8565b6105fc85856105f4886108d4565b33878761139f565b5050505050565b61060d33826115aa565b6106295760405162461bcd60e51b815260040161053690612ca5565b6105d7838383611609565b8461063e8161176d565b61064b86868686866117b1565b505050505050565b61065b611a4d565b8461066581611a5f565b8561066f81611aa5565b42841061067b57600080fd5b600080888154811061068f5761068f612cf2565b60009182526020909120600a9091020190506003810160068201816106b48a82612d4e565b50600182016106c38982612d4e565b506002820187905560005b8651811015610803578681815181106106e9576106e9612cf2565b602002602001015160c0015187828151811061070757610707612cf2565b602002602001015160a001511061071d57600080fd5b600061072860145490565b9050610738601480546001019055565b87828151811061074a5761074a612cf2565b602090810291909101810151600083815260159092526040909120815181906107739082612d4e565b50602082015160018201906107889082612d4e565b506040820151600282019061079d9082612d4e565b50606082015160038201906107b29082612d4e565b50608082015160048201906107c79082612d4e565b5060a0820151600582015560c09091015160069091015582546001810184556000848152602090200155806107fb81612e23565b9150506106ce565b505081546001600160a01b03166000908152600d6020908152604082208054600180820183559184529190922001999099555060078101805460ff191690981790975550504260099095019490945550505050565b6105d783838360405180602001604052806000815250610bef565b61087b611ae9565b61088481611b48565b151560011461089257600080fd5b6001600160a01b0381166000908152600960205260409020546108b6906006611bc5565b6001600160a01b031660009081526009602052604090206000199055565b6000806108e083611ca7565b90506001600160a01b0381166104035760405162461bcd60e51b815260040161053690612e3c565b6060600680548060200260200160405190810160405280929190818152602001828054801561049157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610942575050505050905090565b610971611ae9565b6001600160a01b038116600090815260086020526040812054121561099557600080fd5b6001600160a01b0381166000908152600860205260409020546109b9906005611bc5565b6001600160a01b031660009081526008602052604090206000199055565b60006001600160a01b038216610a415760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610536565b506001600160a01b03166000908152601b602052604090205490565b610a65611ae9565b610a6f6000611cc2565b565b610a79611ae9565b610a8281611d14565b1515600114610a9457610a9481611d75565b610a9d81611de9565b50565b6060610aaa611a4d565b336000908152600b60209081526040918290208054835181840281018401909452808452909183018282801561049157602002820191906000526020600020905b815481526020019060010190808311610aeb575050505050905090565b610b10611ae9565b610a9d81611d75565b601e546001600160a01b031690565b85610b32816111e8565b600060258781548110610b4757610b47612cf2565b90600052602060002090600902019050600060038981548110610b6c57610b6c612cf2565b906000526020600020906009020190506000610b8c8b338a8a8a8a611e5d565b60068085018054600181810183556000928352602080842090920185905592860180549384018155825290200155504260089283018190559101555050505050505050565b60606019805461041890612c71565b610beb338383611fdf565b5050565b610bf933836115aa565b610c155760405162461bcd60e51b815260040161053690612ca5565b610c21848484846120a9565b50505050565b6060610c316120dc565b33600090815260106020908152604091829020805483518184028101840190945280845290918301828280156104915760200282019190600052602060002090815481526020019060010190808311610aeb575050505050905090565b6060610c986120dc565b336000908152600e6020908152604091829020805483518184028101840190945280845290918301828280156104915760200282019190600052602060002090815481526020019060010190808311610aeb575050505050905090565b6060610d0082611155565b6000610d1760408051602081019091526000815290565b90506000815111610d375760405180602001604052806000815250610d62565b80610d41846120e5565b604051602001610d52929190612e6e565b6040516020818303038152906040525b9392505050565b60606005805480602002602001604051908101604052809291908181526020018280548015610491576020028201919060005260206000209081546001600160a01b03168152600190910190602001808311610942575050505050905090565b6001600160a01b039182166000908152601d6020908152604080832093909416825291909152205460ff1690565b610dff611ae9565b6001600160a01b038116610e645760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610536565b610a9d81611cc2565b610e7561236b565b610e7d611a4d565b81610e8781611aa5565b60008381548110610e9a57610e9a612cf2565b60009182526020918290206040805160e081018252600a90930290910180546001600160a01b0390811684526001820154169383019390935260028301805492939291840191610ee990612c71565b80601f0160208091040260200160405190810160405280929190818152602001828054610f1590612c71565b8015610f625780601f10610f3757610100808354040283529160200191610f62565b820191906000526020600020905b815481529060010190602001808311610f4557829003601f168201915b5050505050815260200160038201604051806080016040529081600082018054610f8b90612c71565b80601f0160208091040260200160405190810160405280929190818152602001828054610fb790612c71565b80156110045780601f10610fd957610100808354040283529160200191611004565b820191906000526020600020905b815481529060010190602001808311610fe757829003601f168201915b5050505050815260200160018201805461101d90612c71565b80601f016020809104026020016040519081016040528092919081815260200182805461104990612c71565b80156110965780601f1061106b57610100808354040283529160200191611096565b820191906000526020600020905b81548152906001019060200180831161107957829003601f168201915b5050505050815260200160028201548152602001600382018054806020026020016040519081016040528092919081815260200182805480156110f857602002820191906000526020600020905b8154815260200190600101908083116110e4575b505050919092525050508152600782015460209091019060ff16600381111561112357611123612b62565b600381111561113457611134612b62565b81526020016008820154815260200160098201548152505091505b50919050565b61115e81612177565b610a9d5760405162461bcd60e51b815260040161053690612e3c565b6000818152601c6020526040902080546001600160a01b0319166001600160a01b03841690811790915581906111af826108d4565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000600382815481106111fd576111fd612cf2565b60009182526020918290206040805161012081018252600990930290910180546001600160a01b0390811684526001820154169383019390935260028301549082015260038201805491929160608401919061125890612c71565b80601f016020809104026020016040519081016040528092919081815260200182805461128490612c71565b80156112d15780601f106112a6576101008083540402835291602001916112d1565b820191906000526020600020905b8154815290600101906020018083116112b457829003601f168201915b5050505050815260200160048201548152602001600582015481526020016006820180548060200260200160405190810160405280929190818152602001828054801561133d57602002820191906000526020600020905b815481526020019060010190808311611329575b50505050508152602001600782015481526020016008820154815250509050336001600160a01b031681602001516001600160a01b03161461137e57600080fd5b428160800151111580156113965750428160a0015110155b610beb57600080fd5b4281106113ab57600080fd5b6040805160008082526020820190925290506000604051806101200160405280876001600160a01b03168152602001866001600160a01b03168152602001898152602001888152602001858152602001848152602001838152602001428152602001428152509050600061141e60225490565b905061142e602280546001019055565b60258054600181018255600091909152825160099091027f401968ff42a154441da5f6c4c935ac46b8671f0e062baaa62a7545ba53bb6e4c810180546001600160a01b039384166001600160a01b031991821617825560208601517f401968ff42a154441da5f6c4c935ac46b8671f0e062baaa62a7545ba53bb6e4d840180549190951691161790925560408401517f401968ff42a154441da5f6c4c935ac46b8671f0e062baaa62a7545ba53bb6e4e82015560608401517f401968ff42a154441da5f6c4c935ac46b8671f0e062baaa62a7545ba53bb6e4f82015560808401518492917f401968ff42a154441da5f6c4c935ac46b8671f0e062baaa62a7545ba53bb6e50019061153f9082612d4e565b5060a0820151600582015560c082015180516115659160068401916020909101906123e3565b5060e08201516007820155610100909101516008909101556000988952602a602090815260408a208054600181018255908b5299209098019790975550505050505050565b6000806115b6836108d4565b9050806001600160a01b0316846001600160a01b031614806115dd57506115dd8185610dc9565b806116015750836001600160a01b03166115f68461049b565b6001600160a01b0316145b949350505050565b826001600160a01b031661161c826108d4565b6001600160a01b0316146116425760405162461bcd60e51b815260040161053690612e9d565b6001600160a01b0382166116a45760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610536565b826001600160a01b03166116b7826108d4565b6001600160a01b0316146116dd5760405162461bcd60e51b815260040161053690612e9d565b6000818152601c6020908152604080832080546001600160a01b03199081169091556001600160a01b03878116808652601b8552838620805460001901905590871680865283862080546001019055868652601a90945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b336001600160a01b03166001828154811061178a5761178a612cf2565b60009182526020909120600160069092020101546001600160a01b031614610a9d57600080fd5b6000600186815481106117c6576117c6612cf2565b600091825260208220600690910201915060038083015460ff16908111156117f0576117f0612b62565b146117fa57600080fd5b83851061180657600080fd5b604080516101408101825282546001600160a01b0390811682523360208301908152600280860154948401948552606084018a8152608085018a815260a086018a815260c087018a8152600060e08901819052426101008a018190526101208a015285546001810187559590528751600a86027f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace81018054928a166001600160a01b031993841617815597517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5acf8201805491909a1692169190911790975597517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad087015591517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad1860155517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad2850155517f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad3840155935192939284927f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ad401906119ae9082612d4e565b5060e082015160078201805460ff191660018360038111156119d2576119d2612b62565b021790555061010082015160088201556101209091015160099091015560409182015160009081526012602090815283822080546001808201835591845282842001849055338352600f825293822080549485018155825290209091015560038101805460ff19166002179055426005909101555050505050565b611a5633611d14565b610a6f57600080fd5b6000808281548110611a7357611a73612cf2565b600091825260209091206007600a90920201015460ff166003811115611a9b57611a9b612b62565b14610a9d57600080fd5b336001600160a01b031660008281548110611ac257611ac2612cf2565b600091825260209091206001600a9092020101546001600160a01b031614610a9d57600080fd5b33611af2610b19565b6001600160a01b031614610a6f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610536565b6001600160a01b038116600090815260096020526040812054811380611b6e5750600654155b15611b7b57506000919050565b6001600160a01b038216600081815260096020526040902054600680549091908110611ba957611ba9612cf2565b6000918252602090912001546001600160a01b03161492915050565b80548210611bd257600080fd5b815b8154611be290600190612ee2565b811015611c705781611bf5826001612ef5565b81548110611c0557611c05612cf2565b9060005260206000200160009054906101000a90046001600160a01b0316828281548110611c3557611c35612cf2565b600091825260209091200180546001600160a01b0319166001600160a01b039290921691909117905580611c6881612e23565b915050611bd4565b5080805480611c8157611c81612f08565b600082815260209020810160001990810180546001600160a01b03191690550190555050565b6000908152601a60205260409020546001600160a01b031690565b601e80546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038116600090815260086020526040812054811380611d3a5750600554155b15611d4757506000919050565b6001600160a01b038216600081815260086020526040902054600580549091908110611ba957611ba9612cf2565b611d7e81611d14565b1515600103611d8c57600080fd5b60058054600181019091557f036b6384b5eca791c62761152d0c79bb0604c104a5fb6f4eb0703f3154bb3db0810180546001600160a01b039093166001600160a01b03199093168317905560009182526008602052604090912055565b611df281611b48565b1515600103611e0057600080fd5b60068054600181019091557ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f810180546001600160a01b039093166001600160a01b03199093168317905560009182526009602052604090912055565b6000428210611e6b57600080fd5b60006040518060e00160405280886001600160a01b031681526020018981526020018781526020018681526020018581526020018481526020014281525090506000611eb660215490565b9050611ec6602180546001019055565b6024805460018101825560009190915282517f7cd332d19b93bcabe3cce7ca0c18a052f57e5fd03b4758a09f30f5ddc4b22ec4600790920291820180546001600160a01b0319166001600160a01b0390921691909117815560208401517f7cd332d19b93bcabe3cce7ca0c18a052f57e5fd03b4758a09f30f5ddc4b22ec5830155604084015184927f7cd332d19b93bcabe3cce7ca0c18a052f57e5fd03b4758a09f30f5ddc4b22ec60190611f7b9082612d4e565b5060608201516003820190611f909082612d4e565b506080820151600482015560a0820151600582015560c0909101516006909101556000898152602960209081526040822080546001810182559083529120018190559150509695505050505050565b816001600160a01b0316836001600160a01b03160361203c5760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606401610536565b6001600160a01b038381166000818152601d6020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6120b4848484611609565b6120c084848484612194565b610c215760405162461bcd60e51b815260040161053690612f1e565b611a5633611b48565b606060006120f283612295565b60010190506000816001600160401b0381111561211157612111612538565b6040519080825280601f01601f19166020018201604052801561213b576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a850494508461214557509392505050565b60008061218383611ca7565b6001600160a01b0316141592915050565b60006001600160a01b0384163b1561228a57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906121d8903390899088908890600401612f70565b6020604051808303816000875af1925050508015612213575060408051601f3d908101601f1916820190925261221091810190612fad565b60015b612270573d808015612241576040519150601f19603f3d011682016040523d82523d6000602084013e612246565b606091505b5080516000036122685760405162461bcd60e51b815260040161053690612f1e565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611601565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106122d45772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6904ee2d6d415b85acef8160201b83106122fe576904ee2d6d415b85acef8160201b830492506020015b662386f26fc10000831061231c57662386f26fc10000830492506010015b6305f5e1008310612334576305f5e100830492506008015b612710831061234857612710830492506004015b6064831061235a576064830492506002015b600a83106104035760010192915050565b6040518060e0016040528060006001600160a01b0316815260200160006001600160a01b03168152602001606081526020016123c86040518060800160405280606081526020016060815260200160008152602001606081525090565b81526020016000815260200160008152602001600081525090565b82805482825590600052602060002090810192821561241e579160200282015b8281111561241e578251825591602001919060010190612403565b5061242a92915061242e565b5090565b5b8082111561242a576000815560010161242f565b6001600160e01b031981168114610a9d57600080fd5b60006020828403121561246b57600080fd5b8135610d6281612443565b60005b83811015612491578181015183820152602001612479565b50506000910152565b600081518084526124b2816020860160208601612476565b601f01601f19169290920160200192915050565b602081526000610d62602083018461249a565b6000602082840312156124eb57600080fd5b5035919050565b80356001600160a01b038116811461250957600080fd5b919050565b6000806040838503121561252157600080fd5b61252a836124f2565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60405160e081016001600160401b038111828210171561257057612570612538565b60405290565b604051601f8201601f191681016001600160401b038111828210171561259e5761259e612538565b604052919050565b60006001600160401b038311156125bf576125bf612538565b6125d2601f8401601f1916602001612576565b90508281528383830111156125e657600080fd5b828260208301376000602084830101529392505050565b600082601f83011261260e57600080fd5b610d62838335602085016125a6565b6000806000806080858703121561263357600080fd5b843593506020850135925060408501356001600160401b0381111561265757600080fd5b612663878288016125fd565b949793965093946060013593505050565b60008060006060848603121561268957600080fd5b612692846124f2565b92506126a0602085016124f2565b9150604084013590509250925092565b600080600080600060a086880312156126c857600080fd5b8535945060208601359350604086013592506060860135915060808601356001600160401b038111156126fa57600080fd5b612706888289016125fd565b9150509295509295909350565b600080600080600060a0868803121561272b57600080fd5b853594506001600160401b03602087013581101561274857600080fd5b61275888602089013589016125fd565b9450806040880135111561276b57600080fd5b61277b88604089013589016125fd565b935060608701359250806080880135111561279557600080fd5b6080870135870188601f8201126127ab57600080fd5b81813511156127bc576127bc612538565b6127cc6020823560051b01612576565b81358082526020808301929160051b8401018b10156127ea57600080fd5b602083015b6020843560051b85010181101561291d57848135111561280e57600080fd5b8035840160e0818e03601f1901121561282657600080fd5b61282e61254e565b866020830135111561283f57600080fd5b6128518e6020808501358501016125fd565b8152866040830135111561286457600080fd5b6128778e602060408501358501016125fd565b6020820152866060830135111561288d57600080fd5b6128a08e602060608501358501016125fd565b604082015286608083013511156128b657600080fd5b6128c98e602060808501358501016125fd565b60608201528660a083013511156128df57600080fd5b6128f28e602060a08501358501016125fd565b608082015260c08281013560a083015260e090920135918101919091528352602092830192016127ef565b50809450505050509295509295909350565b60006020828403121561294157600080fd5b610d62826124f2565b6020808252825182820181905260009190848201906040850190845b8181101561298b5783516001600160a01b031683529284019291840191600101612966565b50909695505050505050565b600081518084526020808501945080840160005b838110156129c7578151875295820195908201906001016129ab565b509495945050505050565b602081526000610d626020830184612997565b600080600080600080600060e0888a031215612a0057600080fd5b87359650602088013595506040880135945060608801356001600160401b0380821115612a2c57600080fd5b612a388b838c016125fd565b955060808a0135915080821115612a4e57600080fd5b50612a5b8a828b016125fd565b93505060a0880135915060c0880135905092959891949750929550565b60008060408385031215612a8b57600080fd5b612a94836124f2565b915060208301358015158114612aa957600080fd5b809150509250929050565b60008060008060808587031215612aca57600080fd5b612ad3856124f2565b9350612ae1602086016124f2565b92506040850135915060608501356001600160401b03811115612b0357600080fd5b8501601f81018713612b1457600080fd5b612b23878235602084016125a6565b91505092959194509250565b60008060408385031215612b4257600080fd5b612b4b836124f2565b9150612b59602084016124f2565b90509250929050565b634e487b7160e01b600052602160045260246000fd5b60048110612b9657634e487b7160e01b600052602160045260246000fd5b9052565b60208152600060018060a01b0380845116602084015280602085015116604084015250604083015160e06060840152612bd761010084018261249a565b90506060840151601f19848303016080850152805160808352612bfd608084018261249a565b905060208201518382036020850152612c16828261249a565b91505060408201516040840152606082015191508281036060840152612c3c8183612997565b925050506080840151612c5260a0850182612b78565b5060a084015160c084015260c084015160e08401528091505092915050565b600181811c90821680612c8557607f821691505b60208210810361114f57634e487b7160e01b600052602260045260246000fd5b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b601f8211156105d757600081815260208120601f850160051c81016020861015612d2f5750805b601f850160051c820191505b8181101561064b57828155600101612d3b565b81516001600160401b03811115612d6757612d67612538565b612d7b81612d758454612c71565b84612d08565b602080601f831160018114612db05760008415612d985750858301515b600019600386901b1c1916600185901b17855561064b565b600085815260208120601f198616915b82811015612ddf57888601518255948401946001909101908401612dc0565b5085821015612dfd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600060018201612e3557612e35612e0d565b5060010190565b602080825260189082015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604082015260600190565b60008351612e80818460208801612476565b835190830190612e94818360208801612476565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b8181038181111561040357610403612e0d565b8082018082111561040357610403612e0d565b634e487b7160e01b600052603160045260246000fd5b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612fa39083018461249a565b9695505050505050565b600060208284031215612fbf57600080fd5b8151610d628161244356fea2646970667358221220d84f1a7225985210fb84d262f645fd0f9a1cc3f6d1a7260778319767d8d9c0fb64736f6c63430008130033";

type InsurerContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InsurerContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InsurerContract__factory extends ContractFactory {
  constructor(...args: InsurerContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<InsurerContract> {
    return super.deploy(overrides || {}) as Promise<InsurerContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): InsurerContract {
    return super.attach(address) as InsurerContract;
  }
  override connect(signer: Signer): InsurerContract__factory {
    return super.connect(signer) as InsurerContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InsurerContractInterface {
    return new utils.Interface(_abi) as InsurerContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InsurerContract {
    return new Contract(address, _abi, signerOrProvider) as InsurerContract;
  }
}
