/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC721,
  ERC721Interface,
} from "../../../../../@openzeppelin/contracts/token/ERC721/ERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523462000031576200001f6200001862000175565b90620003ac565b60405161147a620003c7823961147a90f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b038211176200006e57604052565b62000036565b906200008b6200008360405190565b92836200004c565b565b6001600160401b0381116200006e57602090601f01601f19160190565b60005b838110620000be5750506000910152565b8181015183820152602001620000ad565b90929192620000e8620000e2826200008d565b62000074565b9381855260208501908284011162000031576200008b92620000aa565b9080601f83011215620000315781516200012292602001620000cf565b90565b919091604081840312620000315780516001600160401b0381116200003157836200015291830162000105565b60208201519093906001600160401b038111620000315762000122920162000105565b6200019862001841803803806200018c8162000074565b92833981019062000125565b9091565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015620001d5575b6020831014620001cf57565b6200019c565b91607f1691620001c3565b6200012262000122620001229290565b919062000205620001226200021d93620001e0565b90835460001960089290920291821b191691901b1790565b9055565b6200008b91600091620001f0565b8181106200023b575050565b806200024b600060019362000221565b016200022f565b9190601f81116200026257505050565b620002766200008b93600052602060002090565b906020601f8401819004830193106200029a575b6020601f9091010401906200022f565b90915081906200028a565b9060001960089091021c191690565b81620002c091620002a5565b906002021790565b90620002d2815190565b906001600160401b0382116200006e57620002fa82620002f38554620001b2565b8562000252565b602090601f83116001146200032d576200021d92916000918362000321575b5050620002b4565b01519050388062000319565b601f198316916200034385600052602060002090565b9260005b81811062000387575091600293918560019694106200036a575b50505002019055565b6200037c910151601f841690620002a5565b905538808062000361565b9193602060018192878701518155019501920162000347565b906200008b91620002c8565b90620003be6200008b926000620003a0565b6001620003a056fe6080604052600436101561001257600080fd5b60003560e01c806301ffc9a7146100e257806306fdde03146100dd578063081812fc146100d8578063095ea7b3146100d357806323b872dd146100ce57806342842e0e146100c95780636352211e146100c457806370a08231146100bf57806395d89b41146100ba578063a22cb465146100b5578063b88d4fde146100b0578063c87b56dd146100ab5763e985e9c50361010457610560565b610522565b610506565b6103dc565b610389565b61035e565b61032f565b610316565b6102fd565b6102af565b61024f565b6101dc565b610133565b6001600160e01b03191690565b6100fd816100e7565b0361010457565b600080fd5b90503590610116826100f4565b565b906020828203126101045761012c91610109565b90565b9052565b346101045761016161014e610149366004610118565b61057c565b6040515b91829182901515815260200190565b0390f35b600091031261010457565b60005b8381106101835750506000910152565b8181015183820152602001610173565b6101b46101bd6020936101c7936101a8815190565b80835293849260200190565b95869101610170565b601f01601f191690565b0190565b602080825261012c92910190610193565b34610104576101ec366004610165565b6101616101f7610844565b604051918291826101cb565b806100fd565b9050359061011682610203565b906020828203126101045761012c91610209565b6001600160a01b031690565b61012f9061022a565b6020810192916101169190610236565b346101045761016161026a610265366004610216565b610a7c565b6040519182918261023f565b6100fd8161022a565b9050359061011682610276565b91906040838203126101045761012c906102a6818561027f565b93602001610209565b34610104576102c86102c236600461028c565b906109f9565b604051005b90916060828403126101045761012c6102e6848461027f565b936102f4816020860161027f565b93604001610209565b34610104576102c86103103660046102cd565b91610b35565b34610104576102c86103293660046102cd565b91610b52565b346101045761016161026a610345366004610216565b61071f565b906020828203126101045761012c9161027f565b346101045761016161037961037436600461034a565b610697565b6040519182918290815260200190565b3461010457610399366004610165565b6101616101f761084e565b8015156100fd565b90503590610116826103a4565b91906040838203126101045761012c906103d3818561027f565b936020016103ac565b34610104576102c86103ef3660046103b9565b90610aa1565b634e487b7160e01b600052604160045260246000fd5b90601f01601f191681019081106001600160401b0382111761042c57604052565b6103f5565b9061011661043e60405190565b928361040b565b6001600160401b03811161042c57602090601f01601f19160190565b90826000939282370152565b9092919261048261047d82610445565b610431565b938185526020850190828401116101045761011692610461565b9080601f830112156101045781602061012c9335910161046d565b90608082820312610104576104cc818361027f565b926104da826020850161027f565b926040926104ea81858401610209565b936001806060850135921b0381116101045761012c920161049c565b34610104576102c86105193660046104b7565b92919091610b62565b34610104576101616101f7610538366004610216565b6108be565b91906040838203126101045761012c90610557818561027f565b9360200161027f565b346101045761016161014e61057636600461053d565b90610aac565b61058c6380ac58cd60e01b6100e7565b610595826100e7565b149081156105b2575b81156105a8575090565b61012c9150611293565b90506105c4635b5e139f60e01b6100e7565b6105cd826100e7565b149061059e565b61022a61012c61012c9290565b61012c906105d4565b156105f157565b60405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608490fd5b61012c9061022a906001600160a01b031682565b61012c90610648565b61012c9061065c565b9061067890610665565b600052602052604060002090565b61012c9081565b61012c9054610686565b6106d361012c916106a6600090565b506106cc6106bc6106b760006105e1565b61022a565b6106c58361022a565b14156105ea565b600361066e565b61068d565b156106df57565b60405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606490fd5b61072c9060005b50610c02565b61012c61073c6106b760006105e1565b6107458361022a565b14156106d8565b634e487b7160e01b600052602260045260246000fd5b9060016002830492168015610782575b602083101461077d57565b61074c565b91607f1691610772565b805460009392916107a961079f83610762565b8085529360200190565b91600181169081156107fb57506001146107c257505050565b6107d59192939450600052602060002090565b916000925b8184106107e75750500190565b8054848401526020909301926001016107da565b92949550505060ff1916825215156020020190565b9061012c9161078c565b906101166108349261082b60405190565b93848092610810565b038361040b565b61012c9061081a565b61012c600061083b565b61012c600161083b565b61012c61012c61012c9290565b9061087261047d83610445565b918252565b61012c6000610865565b61012c610877565b6101c76108a19260209261089b815190565b94859290565b93849101610170565b6108b89061012c9392610889565b90610889565b6108c781610ffc565b6108cf610929565b80516108e26108de6000610858565b9190565b111561091f5761012c610913916108fb61012c94611207565b9061090560405190565b9384926020840192836108aa565b9081038252038261040b565b505061012c610881565b61012c610881565b1561093857565b60405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608490fd5b1561098e57565b60405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608490fd5b9061011691610a49610a0a8361071f565b610a26610a168261022a565b610a1f8561022a565b1415610931565b33610a308261022a565b610a398261022a565b14918215610a4e575b5050610987565b610ed1565b610a589250610aac565b3880610a42565b9061067890610858565b61012c9061022a565b61012c9054610a69565b610a9c61012c91610a8b600090565b50610a9581610ffc565b6004610a5f565b610a72565b610116919033610f83565b61012c91610ac7610acc92610abf600090565b50600561066e565b61066e565b5460ff1690565b15610ada57565b60405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201526c1c881bdc88185c1c1c9bdd9959609a1b6064820152608490fd5b610116929190610b4d610b488433610c19565b610ad3565b610dc1565b909161011692610b60610881565b925b61011693929190610b76610b488433610c19565b610be3565b15610b8257565b6040515b62461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b6064820152608490fd5b916101169391610bfd93610bf8838383610dc1565b6110ab565b610b7b565b610a9c61012c91610c11600090565b506002610a5f565b610c228261071f565b91610c2c8361022a565b610c358361022a565b14928315610c6c575b508215610c4a57505090565b610c68919250610c5c610c6291610a7c565b9261022a565b9161022a565b1490565b610c799193508290610aac565b9138610c3e565b15610c8757565b60405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201526437bbb732b960d91b6064820152608490fd5b15610ce157565b60405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608490fd5b916001600160a01b0360089290920291821b911b5b9181191691161790565b9190610d6261012c610d6a93610665565b908354610d32565b9055565b61011691600091610d51565b9060001990610d47565b90610d9461012c610d6a92610858565b8254610d7a565b906001600160a01b0390610d47565b90610dba61012c610d6a92610665565b8254610d9b565b9190610de1610dcf8361071f565b610ddb610c628661022a565b14610c80565b610e2d6000610e05610df56106b7836105e1565b610dfe8561022a565b1415610cda565b610e1d610e118561071f565b610ddb610c628861022a565b610e28846004610a5f565b610d6e565b610e71610e3a6001610858565b610e61610e67846003610ac7610e508a8361066e565b610e6187610e5d8361068d565b0390565b90610d84565b916101c78361068d565b610e8581610e80846002610a5f565b610daa565b610ec1610ebb610eb57fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef95610665565b92610665565b92610858565b92610ecb60405190565b600090a4565b90610ee182610e80836004610a5f565b610eea8161071f565b91610ec1610ebb610eb57f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92595610665565b15610f2257565b60405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b6044820152606490fd5b9060ff90610d47565b90610f7c61012c610d6a92151590565b8254610f63565b610f9f610f8f8361022a565b610f988361022a565b1415610f1b565b610fb783610fb284610ac785600561066e565b610f6c565b610ff7610fed610fe77f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3193610665565b93610665565b9361015260405190565b0390a3565b6110086101169161100d565b6106d8565b611018906000610726565b611028610c626106b760006105e1565b141590565b90505190610116826100f4565b906020828203126101045761012c9161102d565b909261107f9061107861012c969461106e60808601976000870190610236565b6020850190610236565b6040830152565b6060818403910152610193565b3d156110a65761109b3d610865565b903d6000602084013e565b606090565b919093926110b7600090565b946110c1816111a8565b1561119e579061110860006110e06110db60209695610665565b610665565b9261111363150b7a02916110f13390565b966110fb60405190565b998a988997889660e01b90565b86526004860161104e565b03925af16000918161116e575b50611152575061112e61108c565b805161113d6108de6000610858565b0361114a57604051610b86565b805190602001fd5b909150610c68611168630a85bd0160e11b6100e7565b916100e7565b61119091925060203d8111611197575b611188818361040b565b81019061103a565b9038611120565b503d61117e565b5060019450505050565b3b6111b66108de6000610858565b1190565b369037565b906101166111d56111cf84610865565b93610445565b601f1901602084016111ba565b634e487b7160e01b600052601260045260246000fd5b8115611202570490565b6111e2565b611210816112a6565b906112206001926101c784610858565b918061122b846111bf565b936020018401905b61123e575b50505090565b6112729060001901926f181899199a1a9b1b9c1cb0b131b232b360811b600a82061a845361126c600a610858565b906111f8565b90816112816108de6000610858565b1461128e57909181611233565b611238565b610c686111686301ffc9a760e01b6100e7565b6112b06000610858565b9072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b6112d181610858565b821015611422575b506904ee2d6d415b85acef8160201b6112f181610858565b821015611400575b50662386f26fc1000061130b81610858565b8210156113de575b506305f5e10061132281610858565b8210156113bc575b5061271061133781610858565b82101561139a575b50606461134b81610858565b821015611378575b506113616108de600a610858565b101561136a5790565b61012c906101c76001610858565b6113939161126c61138892610858565b916101c76002610858565b9038611353565b6113b59161126c6113aa92610858565b916101c76004610858565b903861133f565b6113d79161126c6113cc92610858565b916101c76008610858565b903861132a565b6113f99161126c6113ee92610858565b916101c76010610858565b9038611313565b61141b9161126c61141092610858565b916101c76020610858565b90386112f9565b61143d9161126c61143292610858565b916101c76040610858565b90386112d956fea2646970667358221220ad682d752552db3e884d071c1a58986158d29f30c2909a4042a0a33aaaba7f6b64736f6c63430008130033";

type ERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721__factory extends ContractFactory {
  constructor(...args: ERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721 {
    return super.attach(address) as ERC721;
  }
  override connect(signer: Signer): ERC721__factory {
    return super.connect(signer) as ERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721Interface {
    return new utils.Interface(_abi) as ERC721Interface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {
    return new Contract(address, _abi, signerOrProvider) as ERC721;
  }
}
