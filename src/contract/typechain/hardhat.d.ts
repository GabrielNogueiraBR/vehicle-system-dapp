/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "AccessContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AccessContract__factory>;
    getContractFactory(
      name: "AgentContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.AgentContract__factory>;
    getContractFactory(
      name: "IAgentContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAgentContract__factory>;
    getContractFactory(
      name: "BaseContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseContract__factory>;
    getContractFactory(
      name: "BaseFactoryContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BaseFactoryContract__factory>;
    getContractFactory(
      name: "InsuranceContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InsuranceContract__factory>;
    getContractFactory(
      name: "IInsurerContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IInsurerContract__factory>;
    getContractFactory(
      name: "InsurerContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.InsurerContract__factory>;
    getContractFactory(
      name: "NFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NFT__factory>;
    getContractFactory(
      name: "IUserContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IUserContract__factory>;
    getContractFactory(
      name: "UserContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UserContract__factory>;
    getContractFactory(
      name: "IVehicleAccess",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVehicleAccess__factory>;
    getContractFactory(
      name: "VehicleAccess",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VehicleAccess__factory>;
    getContractFactory(
      name: "IVehicleFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVehicleFactory__factory>;
    getContractFactory(
      name: "VehicleFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VehicleFactory__factory>;
    getContractFactory(
      name: "IVehicleOwner",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVehicleOwner__factory>;
    getContractFactory(
      name: "VehicleOwner",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VehicleOwner__factory>;
    getContractFactory(
      name: "VehicleSystemContract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VehicleSystemContract__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "AccessContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AccessContract>;
    getContractAt(
      name: "AgentContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.AgentContract>;
    getContractAt(
      name: "IAgentContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAgentContract>;
    getContractAt(
      name: "BaseContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseContract>;
    getContractAt(
      name: "BaseFactoryContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BaseFactoryContract>;
    getContractAt(
      name: "InsuranceContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InsuranceContract>;
    getContractAt(
      name: "IInsurerContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IInsurerContract>;
    getContractAt(
      name: "InsurerContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.InsurerContract>;
    getContractAt(
      name: "NFT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NFT>;
    getContractAt(
      name: "IUserContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IUserContract>;
    getContractAt(
      name: "UserContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UserContract>;
    getContractAt(
      name: "IVehicleAccess",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVehicleAccess>;
    getContractAt(
      name: "VehicleAccess",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VehicleAccess>;
    getContractAt(
      name: "IVehicleFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVehicleFactory>;
    getContractAt(
      name: "VehicleFactory",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VehicleFactory>;
    getContractAt(
      name: "IVehicleOwner",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IVehicleOwner>;
    getContractAt(
      name: "VehicleOwner",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VehicleOwner>;
    getContractAt(
      name: "VehicleSystemContract",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.VehicleSystemContract>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
